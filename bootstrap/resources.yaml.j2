{% for namespace in ["external-secrets", "flux-system", "network", "security", "observability", "storage", "kube-system", "cert-manager"] %}

---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{% endfor %}

---
apiVersion: v1
kind: Secret
metadata:
  name: onepassword-secret
  namespace: security
stringData:
  token: op://K8s/1password-token/password
  1password-credentials.json: op://K8s/1password-json/1password-credentials.json

---
apiVersion: v1
kind: Secret
metadata:
    name: grafana-admin-secret
    namespace: observability
stringData:
    admin-password: op://K8s/grafana-admin/GRAFANA_ADMIN_PASSWORD
    admin-user: op://K8s/grafana-admin/GRAFANA_ADMIN_USERNAME


---
apiVersion: v1
kind: Secret
metadata:
    name: vernemq-auth
    namespace: storage
stringData:
    DOCKER_VERNEMQ_USER_ADMIN: op://K8s/vernemq-auth/vernemq_password
    DOCKER_VERNEMQ_USER_MQTT: op://K8s/vernemq-auth/vernemq_user_mqtt_password

---
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
stringData:
  age.agekey: op://kubernetes/sops/SOPS_PRIVATE_KEY


---
apiVersion: v1
kind: Secret
metadata:
  name: samcloud.online-tls
  namespace: kube-system
  annotations:
    cert-manager.io/alt-names: '*.samcloud.online,samcloud.online'
    cert-manager.io/certificate-name: samcloud.online
    cert-manager.io/common-name: samcloud.online
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
  labels:
    controller.cert-manager.io/fao: "true"
type: kubernetes.io/tls
data:
  tls.crt: op://kubernetes/samcloud.online-tls/tls.crt
  tls.key: op://kubernetes/samcloud.online-tls/tls.key


---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-tunnel-id-secret
  namespace: network
stringData:
  CLOUDFLARE_TUNNEL_ID: op://kubernetes/cloudflare/CLOUDFLARE_TUNNEL_ID







     



