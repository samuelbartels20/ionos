---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: robusta-krr-secret
  namespace: observability
  labels:
    app.kubernetes.io/name: robusta-krr
    app.kubernetes.io/component: cost-optimization
    app.kubernetes.io/part-of: observability
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: robusta-krr-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
                # Prometheus authentication if needed
        prometheus-auth-header: "{{ .prometheus_auth_header | default \"\" }}"

        # Robusta SaaS integration token (optional)
        robusta-api-key: "{{ .robusta_api_key | default \"\" }}"

        # Slack webhook for notifications (optional)
        slack-webhook-url: "{{ .slack_webhook_url | default \"\" }}"

        # Database connection for external storage (optional)
        database-url: "{{ .database_url | default \"\" }}"

        # Custom configuration
        krr-config.yaml: |
          prometheus:
            url: "http://mimir-gateway.observability.svc.cluster.local:80/prometheus"
            auth_header: "{{ .prometheus_auth_header | default \"\" }}"
            ssl_enabled: false
            custom_labels:
              cluster: "kubernetes"

          strategy:
            cpu:
              percentile: 95
              buffer_ratio: 0.15
            memory:
              buffer_ratio: 0.15
              history_duration: "7d"

          output:
            format: "table"
            export_prometheus_metrics: true
                        export_to_slack: "{{ .enable_slack | default \"false\" }}"

          scanning:
            exclude_namespaces:
              - "kube-system"
              - "kube-public"
              - "flux-system"
              - "default"
              - "cattle-system"
              - "longhorn-system"
            include_resources:
              - "Deployment"
              - "StatefulSet"
              - "DaemonSet"
              - "Job"
              - "CronJob"

          # Robusta integration
          robusta:
            enabled: "{{ .enable_robusta | default \"false\" }}"
            api_key: "{{ .robusta_api_key | default \"\" }}"
            cluster_name: "kubernetes"

          # Notifications
          notifications:
            slack:
              enabled: "{{ .enable_slack | default \"false\" }}"
              webhook_url: "{{ .slack_webhook_url | default \"\" }}"
              channel: "#infrastructure"
              threshold_cpu: 50  # Notify if CPU can be reduced by more than 50%
              threshold_memory: 50  # Notify if memory can be reduced by more than 50%

  data:
    # Prometheus authentication header (if needed)
    - secretKey: prometheus_auth_header
      remoteRef:
        key: robusta-krr
        property: prometheus_auth_header

    # Robusta SaaS API key
    - secretKey: robusta_api_key
      remoteRef:
        key: robusta-krr
        property: robusta_api_key

    # Slack webhook URL for notifications
    - secretKey: slack_webhook_url
      remoteRef:
        key: robusta-krr
        property: slack_webhook_url

    # Database URL for external storage
    - secretKey: database_url
      remoteRef:
        key: robusta-krr
        property: database_url

    # Feature flags
    - secretKey: enable_robusta
      remoteRef:
        key: robusta-krr
        property: enable_robusta

    - secretKey: enable_slack
      remoteRef:
        key: robusta-krr
        property: enable_slack