---
apiVersion: v1
kind: ConfigMap
metadata:
  name: slo-definitions
  namespace: observability
  labels:
    app.kubernetes.io/name: slo-management
    app.kubernetes.io/component: sli-slo
data:
  slo-definitions.yaml: |
    version: "1.0"
    last_updated: "2025-01-26"

    global:
      error_budget_policy:
        calculation_window: "30d"  # 30-day rolling window
        alert_burn_rates:
          critical: [2, 6]      # 2% in 1h, 6% in 6h
          warning: [5, 10]      # 5% in 6h, 10% in 3d

    services:
      mimir:
        service_name: "Mimir Metrics Platform"
        owner: "SRE Team"
        tier: "critical"
        slis:
          availability:
            description: "Percentage of successful requests"
            sli_specification: "rate(cortex_request_duration_seconds_count{status_code!~'5..'}[5m]) / rate(cortex_request_duration_seconds_count[5m])"
            target: 99.95  
            error_budget: 0.05  

          latency:
            description: "95th percentile request latency"
            sli_specification: "histogram_quantile(0.95, rate(cortex_request_duration_seconds_bucket[5m]))"
            target: 500  

          throughput:
            description: "Ingestion rate capability"
            sli_specification: "rate(cortex_distributor_samples_in_total[5m])"
            target: 100000  

      loki:
        service_name: "Loki Log Platform"
        owner: "SRE Team"
        tier: "critical"
        slis:
          availability:
            description: "Log ingestion success rate"
            sli_specification: "rate(loki_ingester_samples_received_total[5m]) / (rate(loki_ingester_samples_received_total[5m]) + rate(loki_ingester_samples_failed_total[5m]))"
            target: 99.9  
            error_budget: 0.1  

          latency:
            description: "Log query response time"
            sli_specification: "histogram_quantile(0.95, rate(loki_request_duration_seconds_bucket[5m]))"
            target: 1000  

          durability:
            description: "Log retention compliance"
            sli_specification: "loki_ingester_wal_corruptions_total"
            target: 0      

      tempo:
        service_name: "Tempo Tracing Platform"
        owner: "SRE Team"
        tier: "high"
        slis:
          availability:
            description: "Trace ingestion success rate"
            sli_specification: "rate(tempo_ingester_traces_created_total[5m])"
            target: 99.9
            error_budget: 0.1

          latency:
            description: "Trace query latency"
            sli_specification: "histogram_quantile(0.95, rate(tempo_request_duration_seconds_bucket[5m]))"
            target: 2000  

          completeness:
            description: "Trace span completeness"
            sli_specification: "tempo_ingester_live_traces"
            target: 99.5  

      grafana:
        service_name: "Grafana Visualization Platform"
        owner: "SRE Team"
        tier: "high"
        slis:
          availability:
            description: "Dashboard access availability"
            sli_specification: "up{job='grafana'}"
            target: 99.9
            error_budget: 0.1

          latency:
            description: "Dashboard load time"
            sli_specification: "histogram_quantile(0.95, rate(grafana_http_request_duration_seconds_bucket[5m]))"
            target: 3000  

      clickhouse:
        service_name: "ClickHouse Analytics Platform"
        owner: "Data Team"
        tier: "critical"
        slis:
          availability:
            description: "Query execution success rate"
            sli_specification: "rate(clickhouse_query_success_total[5m]) / rate(clickhouse_query_total[5m])"
            target: 99.95
            error_budget: 0.05

          latency:
            description: "Query execution latency"
            sli_specification: "histogram_quantile(0.95, rate(clickhouse_query_duration_seconds_bucket[5m]))"
            target: 5000  

          durability:
            description: "Data integrity and backup success"
            sli_specification: "clickhouse_backup_success_timestamp"
            target: 99.99  

      druid:
        service_name: "Druid Real-time Analytics"
        owner: "Data Team"
        tier: "high"
        slis:
          availability:
            description: "Broker query success rate"
            sli_specification: "rate(druid_broker_query_success_total[5m]) / rate(druid_broker_query_total[5m])"
            target: 99.9
            error_budget: 0.1

          latency:
            description: "Real-time query latency"
            sli_specification: "histogram_quantile(0.95, rate(druid_broker_query_time_bucket[5m]))"
            target: 1000  

          freshness:
            description: "Data ingestion lag"
            sli_specification: "druid_ingestion_lag_seconds"
            target: 60     

      superset:
        service_name: "Superset BI Platform"
        owner: "Data Team"
        tier: "medium"
        slis:
          availability:
            description: "Dashboard access success rate"
            sli_specification: "rate(superset_http_requests_total{status!~'5..'}[5m]) / rate(superset_http_requests_total[5m])"
            target: 99.5
            error_budget: 0.5

          latency:
            description: "Dashboard render time"
            sli_specification: "histogram_quantile(0.95, rate(superset_http_request_duration_seconds_bucket[5m]))"
            target: 10000  

      kubernetes_api:
        service_name: "Kubernetes API Server"
        owner: "Platform Team"
        tier: "critical"
        slis:
          availability:
            description: "API request success rate"
            sli_specification: "rate(apiserver_request_total{code!~'5..'}[5m]) / rate(apiserver_request_total[5m])"
            target: 99.99
            error_budget: 0.01

          latency:
            description: "API request latency"
            sli_specification: "histogram_quantile(0.99, rate(apiserver_request_duration_seconds_bucket[5m]))"
            target: 1000  

      storage_cluster:
        service_name: "Ceph Storage Cluster"
        owner: "Platform Team"
        tier: "critical"
        slis:
          availability:
            description: "Storage operation success rate"
            sli_specification: "ceph_health_status == 0"
            target: 99.99
            error_budget: 0.01

          latency:
            description: "Storage I/O latency"
            sli_specification: "ceph_osd_op_r_latency + ceph_osd_op_w_latency"
            target: 100    

          durability:
            description: "Data durability and replication"
            sli_specification: "ceph_pg_degraded_ratio"
            target: 0      

    error_budget_policies:
      burn_rate_alerts:
        fast_burn:
          severity: "critical"
          for: "2m"
          burn_rate: 14.4  

        slow_burn:
          severity: "warning"
          for: "15m"
          burn_rate: 6.0  

    reporting:
      frequency: "daily"
      recipients:
        - "sre-team@samcloud.online"
        - "engineering-leads@samcloud.online"
      dashboard_url: "https://grafana.samcloud.online/d/slo-overview"

    compliance:
      frameworks: ["SOC2", "ISO27001", "GDPR"]
      audit_frequency: "quarterly"
      documentation_review: "monthly"

  slo-burn-rate-rules.yaml: |
    groups:
    - name: slo.burn.rate
      interval: 30s
      rules:
      - record: slo:mimir_availability_5m
        expr: |
          (
            rate(cortex_request_duration_seconds_count{status_code!~"5.."}[5m])
            /
            rate(cortex_request_duration_seconds_count[5m])
          )

      - record: slo:mimir_availability_30m
        expr: |
          (
            rate(cortex_request_duration_seconds_count{status_code!~"5.."}[30m])
            /
            rate(cortex_request_duration_seconds_count[30m])
          )

      - record: slo:mimir_availability_2h
        expr: |
          (
            rate(cortex_request_duration_seconds_count{status_code!~"5.."}[2h])
            /
            rate(cortex_request_duration_seconds_count[2h])
          )

      - record: slo:mimir_availability_6h
        expr: |
          (
            rate(cortex_request_duration_seconds_count{status_code!~"5.."}[6h])
            /
            rate(cortex_request_duration_seconds_count[6h])
          )

      - record: slo:mimir_error_budget_burn_rate_5m
        expr: |
          (1 - slo:mimir_availability_5m) / (1 - 0.9995)

      - record: slo:mimir_error_budget_burn_rate_30m
        expr: |
          (1 - slo:mimir_availability_30m) / (1 - 0.9995)

      - record: slo:mimir_error_budget_burn_rate_2h
        expr: |
          (1 - slo:mimir_availability_2h) / (1 - 0.9995)

      - record: slo:mimir_error_budget_burn_rate_6h
        expr: |
          (1 - slo:mimir_availability_6h) / (1 - 0.9995)

      - record: slo:loki_availability_5m
        expr: |
          (
            rate(loki_ingester_samples_received_total[5m])
            /
            (rate(loki_ingester_samples_received_total[5m]) + rate(loki_ingester_samples_failed_total[5m]))
          )

      - record: slo:loki_error_budget_burn_rate_5m
        expr: |
          (1 - slo:loki_availability_5m) / (1 - 0.999)

      - record: slo:clickhouse_availability_5m
        expr: |
          up{job=~".*clickhouse.*"}

      - record: slo:clickhouse_error_budget_burn_rate_5m
        expr: |
          (1 - slo:clickhouse_availability_5m) / (1 - 0.9995)