# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: wazuh-indexer
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: wazuh-indexer
      version: 4.9.0
      sourceRef:
        kind: HelmRepository
        name: wazuh
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
    crds: CreateReplace
  uninstall:
    keepHistory: false
  values:
    # High Availability Configuration
    replicaCount: 3
    podDisruptionBudget:
      enabled: true
      minAvailable: 2

    # Advanced Deployment Strategy
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0

    # Resource Management
    resources:
      requests:
        cpu: 2000m
        memory: 4Gi
      limits:
        cpu: 4000m
        memory: 8Gi

    # Pod Placement and Scheduling
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["wazuh-indexer"]
            topologyKey: kubernetes.io/hostname
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/worker
                  operator: Exists

    # Security Context
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      capabilities:
        drop: ["ALL"]
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault

    # Storage Configuration
    persistence:
      enabled: true
      storageClass: longhorn
      size: 100Gi
      accessModes:
        - ReadWriteOnce
      retainPolicy: Retain
      backup:
        enabled: true
        schedule: "0 2 * * *"
        retention:
          keep: 7
          prune: true
        encryption:
          enabled: true
          algorithm: AES256
          key: "${BACKUP_ENCRYPTION_KEY}"
        verification:
          enabled: true
          schedule: "0 4 * * *"
          threshold: 95
        compression:
          enabled: true
          algorithm: zstd
          level: 3

    # Network Configuration
    service:
      type: ClusterIP
      ports:
        - name: http
          port: 9200
          protocol: TCP
        - name: transport
          port: 9300
          protocol: TCP
      loadBalancer:
        enabled: false
        sourceRanges: []

    # Monitoring & Observability
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
        labels: {}
      prometheusRule:
        enabled: true
        additionalLabels: {}

    # Logging Configuration
    logging:
      json: true
      level: info
      output:
        loki:
          enabled: true
          url: http://loki.monitoring:3100
          labels:
            app: wazuh
            component: indexer

    # Advanced Security Features
    security:
      tls:
        enabled: true
        auto: true
        certificatesDuration: 2160h
        http:
          enabled: true
          generateCerts: true
        transport:
          enabled: true
          generateCerts: true
      encryption:
        enabled: true
        algorithm: AES256
        key: "${ENCRYPTION_KEY}"
      audit:
        enabled: true
        logPath: /usr/share/wazuh-indexer/logs/audit
        logFormat: json
        rules:
          - level: Metadata
            users: ["system:serviceaccount:*"]
            resources: ["indices", "aliases"]
          - level: RequestResponse
            users: ["system:serviceaccount:*"]
            resources: ["*"]
      networkPolicy:
        enabled: true
        ingressRules:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/name: wazuh-manager
                ports:
                  - port: 9200
                    protocol: TCP
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/name: wazuh-dashboard
                ports:
                  - port: 9200
                    protocol: TCP
        egressRules:
          - to:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: kube-system
                ports:
                  - port: 53
                    protocol: UDP
                  - port: 53
                    protocol: TCP

    # Cluster Configuration
    cluster:
      enabled: true
      name: wazuh-indexer
      initialMasterNodes:
        - wazuh-indexer-0
        - wazuh-indexer-1
        - wazuh-indexer-2
      minimumMasterNodes: 2

    # Performance Tuning
    jvm:
      heap:
        min: 2g
        max: 4g
      gc:
        type: G1GC
        options:
          - "-XX:+UseG1GC"
          - "-XX:G1ReservePercent=25"
          - "-XX:InitiatingHeapOccupancyPercent=30"

    # Index Management
    indexManagement:
      enabled: true
      policies:
        - name: wazuh-alerts
          pattern: wazuh-alerts-*
          phases:
            hot:
              minAge: 0ms
              actions:
                rollover:
                  maxAge: 7d
                  maxSize: 50gb
            warm:
              minAge: 7d
              actions:
                migrate:
                  enabled: true
            cold:
              minAge: 30d
              actions:
                migrate:
                  enabled: true
            delete:
              minAge: 90d
              actions:
                delete: {}

    # Snapshot Configuration
    snapshots:
      enabled: true
      repository:
        type: s3
        settings:
          bucket: wazuh-snapshots
          region: us-east-1
          accessKey: "${AWS_ACCESS_KEY}"
          secretKey: "${AWS_SECRET_KEY}"
      schedule: "0 0 * * *"
      retention:
        keep: 30
        keepDaily: 7
        keepWeekly: 4
        keepMonthly: 12

    # Health Checks
    livenessProbe:
      enabled: true
      initialDelaySeconds: 90
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 90
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: true
      initialDelaySeconds: 90
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1