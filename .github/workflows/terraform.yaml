name: Terraform
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write
  actions: write
  checks: write
  deployments: write
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
        shell: bash
    env:
      TF_VAR_ionos_access_key_id: ${{ secrets.IONOS_ACCESS_KEY_ID }}
      TF_VAR_ionos_secret_access_key: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
      TF_VAR_ionos_username: ${{ secrets.IONOS_USERNAME }}
      TF_VAR_ionos_password: ${{ secrets.IONOS_PASSWORD }}
      TF_VAR_ionos_token: ${{ secrets.TOKEN }}
      TF_VAR_ionos_s3_endpoint: ${{ secrets.ENDPOINT }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0:
        cli_config_credentials_token: ${{ secrets.TOKEN }}

    - name: Terraform Init
      id: init
      run: terraform init 
      env:
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
        IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
        IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
      env:
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
        IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}
    - name: Terraform Get
      id: get
      run: terraform get
      env:
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
        IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      env:
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
        IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}


    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          </details>
          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        TOKEN: ${{ secrets.TOKEN }}
        IONOS_ACCESS_KEY_ID: ${{ secrets.IONOS_ACCESS_KEY_ID }}
        IONOS_SECRET_ACCESS_KEY: ${{ secrets.IONOS_SECRET_ACCESS_KEY }}
        IONOS_TOKEN: ${{ secrets.TOKEN }}
        IONOS_S3_ENDPOINT: ${{ secrets.ENDPOINT }}
        ACTIONS: ${{ secrets.ACTIONS }}
        PASSWORD: ${{ secrets.IONOS_PASSWORD }}
        USERNAME: ${{ secrets.IONOS_USERNAME }}
        GITHUB_ACTIONS: ${{ secrets.ACTIONS }}